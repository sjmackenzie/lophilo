export PATH:=${HOME}/lophilo/codesourcery:${PATH}
ZLIB_INSTALL:=${HOME}/lophilo/node/zlib
export LDFLAGS:=-L${ZLIB_INSTALL}/lib -L${HOME}/lophilo/openssl-aufs
export NODE_INSTALLER:=${HOME}/lophilo-bin/installer/arm
export CXXFLAGS+=-I${HOME}/lophilo/openssl-aufs/include

.PHONY: deps node install build zlib config debian

all:
	@echo "choose deps or node"
deps:
	@echo "installing packages"
	sudo apt-get install python

debian-config:
	./configure --prefix=./debian/usr --dest-cpu=arm --without-snapshot --openssl-libpath=${HOME}/lophilo/openssl --openssl-includes=${HOME}/lophilo/openssl/include --openssl-use-sys=OPENSSL_USE_SYS

debian-pkg:
	# don't use the ARM node!!
	node tools/installer.js ./config.gypi install
	mkdir -p ./debian/usr/lib/node_modules/lophilo
	cp ../lophilo-node/lophilo.js ../lophilo-node/lophilo
	cp ../lophilo-node/lophilo.js ../lophilo-node/package.json ./debian/usr/lib/node_modules/lophilo
	fakeroot dpkg-deb --build debian
	mv debian.deb lophilo-nodejs.deb
	cp lophilo-nodejs.deb /exports/squeeze/home/rngadam
	
config:
	@echo "configuring and making node"
	./configure --prefix=$(HOME)/lophilo-bin --openssl-use-sys=OPENSSL_USE_SYS --dest-cpu=arm --without-ssl --without-snapshot  

zlib:
	(cd ${HOME}/upstream/zlib;./configure --prefix ${ZLIB_INSTALL}; make;make install)

build:
	time make -j`getconf _NPROCESSORS_ONLN`

install:
	# don't use the ARM node!!
	node tools/installer.js ./config.gypi install

install_copy:
	cp node /exports/squeeze/home/rngadam/lophilo-bin/bin

install_dumb:
	mkdir -p ${NODE_INSTALLER}
	cp -r out/Release/* tools/ ./config.gypi  ${NODE_INSTALLER}
	cd ${NODE_INSTALLER}; git add .; git commit -m "node installer update for arm"; git push
	@echo "on target, cd $$HOME/lophilo-bin/installer/arm; git pull; ./node tools/installer.js ./config.gypi install"

local_install:
	make install

clean:
	make clean
