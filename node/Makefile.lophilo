include ../Makefile.common

NODE_VERSION:=0.7.6

ifeq ($(LOPHILO_TARGET_ARCH),arm)
	DEBPKG_NAME:=lophilo-nodejs_${NODE_VERSION}_armel.deb
else
	DEBPKG_NAME:=lophilo-nodejs_${NODE_VERSION}_i386.deb
endif

DEBPKG_PREFIX:=./debian/usr 

OPENSSL_DIR:=${LOPHILO_DIR}/openssl-aufs
V8_DIR:=${LOPHILO_DIR}/v8-aufs
ZLIB_DIR:=${LOPHILO_DIR}/zlib-aufs
ZLIB_INSTALL:=${LOPHILO_DIR}/zlib-aufs

OBJDUMP:=${TOOLCHAIN_PATH}/objdump

export CXXFLAGS+=-I${OPENSSL_DIR}/include -I${V8_DIR}/include -I${ZLIB_DIR}
export LDFLAGS:=-L${ZLIB_INSTALL} -L${LOPHILO_DIR}/openssl-aufs
.PHONY: deps node install build zlib config debian

all:
	@echo "LOPHILO_DIR: ${LOPHILO_DIR}"
	@echo "PATH: ${PATH}"
	which cc
	@echo "choose deps or node"
deps:
	@echo "installing packages"
	sudo apt-get install python

config:
	@echo "configuring and making node"
	./configure \
		--prefix=${DEBPKG_PREFIX} \
		--dest-cpu=${LOPHILO_TARGET_ARCH} \
		--openssl-libpath=${OPENSSL_DIR}\
		--openssl-includes=${OPENSSL_DIR}/include \
		--openssl-use-sys=OPENSSL_USE_SYS \
		--shared-v8 \
		--shared-v8-libpath=${V8_DIR} \
		--shared-v8-includes=${V8_DIR}/include \
		--shared-zlib \
		--shared-zlib-libpath=${ZLIB_DIR} \
		--shared-zlib-includes=${ZLIB_DIR}

build:
	#time make -j`getconf _NPROCESSORS_ONLN`
	time make -j8 V=1

sanity:
	cp node /exports/squeeze/home/rngadam
	ssh rngadam@squeeze1 "/home/rngadam/node -e 'console.log(process.versions)'"

debpkg:
	# use the natively build node to install...
	rm -fr ${DEBPKG_PREFIX}
	mkdir -p ${DEBPKG_PREFIX}
	node tools/installer.js ./config.gypi install
	# this is symlinked as /usr/bin/npm...
	chmod a+x debian/usr/lib/node_modules/npm/bin/npm-cli.js
	# delete extraneous documentation
	rm -fr debian/usr/lib/node_modules/npm/html
	rm -fr debian/usr/lib/node_modules/npm/doc
	rm -fr debian/usr/lib/node_modules/npm/man
	# actually build package
	fakeroot dpkg-deb --build debian ${DEBPKG_NAME} 
	dpkg-sig -k ${GPG_KEY} --sign builder ${DEBPKG_NAME}
	sudo reprepro --basedir /var/www/repos/apt/${DEB_REPO} includedeb ${DEB_CODENAME} ${DEBPKG_NAME}
	rm -f ${DEBPKG_NAME}
	
local_install:
	make install

clean:
	make clean

node.asm: node
	${OBJDUMP} -d $< > $@

node.neon: node.asm Makefile.lophilo
	-egrep ".*movw.*<" $< > $@

test: node.neon Makefile.lophilo
	# test that the file is empty...
	test ! -s $<
